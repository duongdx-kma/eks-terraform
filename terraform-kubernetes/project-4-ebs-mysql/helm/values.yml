global:
  imageRegistry: ""
  imagePullSecrets: []
  defaultStorageClass: "longhorn-storage-delete"
  storageClass: "longhorn-storage-delete"
  compatibility:
    openshift:
      adaptSecurityContext: auto

clusterDomain: cluster.local

commonAnnotations: {}
## @param commonLabels Common labels to add to all MySQL resources (sub-charts are not considered). Evaluated as a template
##
commonLabels: {}
## @param extraDeploy Array with extra yaml to deploy with the chart. Evaluated as a template
##
extraDeploy: []
## @param serviceBindings.enabled Create secret for service binding (Experimental)
## Ref: https://servicebinding.io/service-provider/
##
serviceBindings:
  enabled: false
## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity
## @section MySQL common parameters
##

## Bitnami MySQL image
## ref: https://hub.docker.com/r/bitnami/mysql/tags/
## @param image.registry [default: REGISTRY_NAME] MySQL image registry
## @param image.repository [default: REPOSITORY_NAME/mysql] MySQL image repository
## @skip image.tag MySQL image tag (immutable tags are recommended)
## @param image.digest MySQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy MySQL image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
## @param image.debug Specify if debug logs should be enabled
##
image:
  registry: docker.io
  repository: bitnami/mysql
  tag: 8.4.2-debian-12-r2
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
  debug: false

architecture: replication

auth:
  rootPassword: "password"
  createDatabase: true
  database: "todo"
  username: "duongdx"
  password: "password"
  replicationUser: replicator
  replicationPassword: "password"

initdbScripts:
  my_init_script.sh: |
    #!/bin/bash
    mysql -P 3306 -uroot -proot todo -e "
    CREATE DATABASE IF NOT EXISTS todo;
    USE todo;
    CREATE TABLE todo (id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY, title VARCHAR(100), complete BOOLEAN);"

primary:
  persistence:
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 500Mi
  persistentVolumeClaimRetentionPolicy:
    enabled: false
    whenScaled: Retain
    whenDeleted: Retain
  extraVolumes: []
  extraVolumeMounts: []
  initContainers: []
  sidecars: []
  service:
    type: ClusterIP
    ports:
      mysql: 3306
      mysqlx: 33060
    nodePorts:
      mysql: ""
      mysqlx: ""
    clusterIP: ""
    loadBalancerIP: ""
    externalTrafficPolicy: Cluster
    loadBalancerSourceRanges: []
    extraPorts: []
    annotations: {}
    sessionAffinity: None
    sessionAffinityConfig: {}
    headless:
      annotations: {}
  pdb:
    create: true
    minAvailable: ""
    maxUnavailable: ""
  podLabels: {}

secondary:
  name: secondary
  replicaCount: 3
  persistence:
    size: 500Mi
